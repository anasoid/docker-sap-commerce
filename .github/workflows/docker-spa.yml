name: Docker Build ⚓

on: [push, pull_request]

jobs:
  # Single job now to build Docker Image, run GHC unit tests, and push to DockerHub
  build_test_push:
    name: Build and Publish

    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - spa-version: latest
            is-b2b : "false"
          - spa-version: latest
            is-b2b : "true"


    # v2 https://github.com/docker/build-push-action/blob/master/UPGRADE.md
    steps:
      - name: Checkout ✅
        uses: actions/checkout@v3

      - name: Config 📦
        run: |
          echo spa-version=${{ matrix.spa-version }}
          echo suffix=${{ matrix.suffix }}
          echo is-b2b=${{ matrix.is-b2b }}
          echo tags-latest=${{ matrix.tags-latest }}

      - name: Prepare 📦
        id: prep
        run: |
          DOCKER_IMAGE=anasoid/sap-spartacus
          VERSION="${{ matrix.spa-version }}${{ matrix.suffix }}"
          echo ::set-output name=image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          if [[ "${{ matrix.is-b2b }}" == "true" ]];then   echo ::set-output name=suffix::-b2b; else   echo ::set-output name=suffix::; fi;
          if [[ "${{ matrix.is-b2b }}" == "true" ]];then   echo ::set-output name=sites::powertools-spa; else   echo ::set-output name=suffix::apparel-uk-spa,electronics-spa; fi;

      - name: Show Image Settings 📦
        run: echo "IMAGE=${{ steps.prep.outputs.image }} VERSION=${{ steps.prep.outputs.version }} SITES=${{ steps.prep.outputs.sites }}"

      - name: Set up Docker Buildx 📦
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Docker Build only - retain local Image 📦
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/spa/Dockerfile
          load: true
          push: false
          build-args: |
            SPA_VERSION=${{ matrix.spa-version }}
            IS_B2B=${{ matrix.is-b2b }}
            BASE_SITE=${{ steps.prep.outputs.sites }}

          tags: |
            ${{ steps.prep.outputs.image }}:${{ matrix.spa-version }}${{ matrix.suffix }}


          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ github.sha }}

      - name: Result 📦
        id: result
        run: |
          echo ::set-output name=currentImage::${{ steps.prep.outputs.image }}:${{ matrix.spa-version }}${{ matrix.suffix }}
          docker images

      #Publish on master
      - name: Login to DockerHub 📦
        if: ${{ github.ref_name == 'master' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker repo (on Push only) ☁️
        if: ${{ github.ref_name == 'master' }}
        run: docker image push --all-tags ${{ steps.prep.outputs.image }}
